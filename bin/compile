#!/usr/bin/env bash

set -eo pipefail
shopt -s extglob dotglob nocasematch

APP_DIR=/app
BUILD_DIR=$1    # /tmp/build_76471de2-7dff-46b7-b331-c8dd07653def
CACHE_DIR=$2    # /app/tmp/cache
DANGER_DIR=$(mktemp -d /tmp/danger.XXXXXX)
ENV_DIR=$3

BUILDPACK_URLS=$(<$BUILD_DIR/.buildpacks)

main() {
    declare bpu bp branch detected released
    declare bp_dir cache_dir bp_released

    for bpu in $BUILDPACK_URLS; do
        set-vars

        announce "Cloning $bpu"
        git clone --depth=1 $bpu $bp_dir 2>&1 | indent
        if [[ -n $branch ]]; then
            announce "Checking out branch $branch"
            (cd $bp_dir && git checkout $branch 2>&1 | indent)
        fi
        rm -rf $bp_dir/.git
    done

    for bpu in $BUILDPACK_URLS; do
        set-vars

        announce "Running $bp/bin/detect"
        detected=$($bp_dir/bin/detect $BUILD_DIR)
        if [[ $? != 0 || -z $detected ]]; then
            announce "... NO${detected:+: $detected}"
            continue
        fi
        announce "... YES: $detected"

        announce "Running $bp/bin/compile"
        mkdir -p $cache_dir
        $bp_dir/bin/compile $BUILD_DIR $cache_dir $ENV_DIR

        announce "Running $bp/bin/release"
        if [[ -x $bp_dir/bin/release ]]; then
            released=$($bp_dir/bin/release $BUILD_DIR)
            if [[ -n $released ]]; then
                echo "$released" > /tmp/last_pack_release.out
                bp_released=$bp
            fi
        fi
    done

    if [[ -n $bp_released ]]; then
        announce "Using release configuration from $bp_released"
        cat /tmp/last_pack_release.out | indent
    fi
}

set-vars() {
    if [[ $bpu == *'#'* ]]; then
        branch=${bpu##*#}
        bpu=${bpu%#*}
    else
        branch=
    fi
    bp=${bpu#*//*/}
    bp_dir=$DANGER_DIR/$bp
    cache_dir=$CACHE_DIR/$bp
}

announce() {
    echo "=====> $*" >&2
}

indent() {
    sed 's/^/       /'
}

if [ $(uname) == Darwin ]; then
    sed() { command sed -l "$@"; }
else
    sed() { command sed -u "$@"; }
fi

[[ "$0" != "$BASH_SOURCE" ]] || main "$@"
